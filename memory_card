#создай приложение для запоминания информации
from PyQt5. QtCore import Qt
from PyQt5.QtWidgets import (QApplication, QWidget, QLabel, QVBoxLayout,
        QGroupBox, QRadioButton, QPushButton, QLabel, QHBoxLayout, QButtonGroup)
app = QApplication([])
window = QWidget()

from random import shuffle,randint

#Список
questions_list = []

window = QWidget()
layout_card = QVBoxLayout()
window.setLayout(layout_card)
window.setWindowTitle('Memory Card')
window.total = 0
window.score = 0 

#......
def next_question():
        window.total += 1
        cur_question = randint(0,len(questions_list) - 1)
        q = questions_list[cur_question]
        ask(q)



lb_Question = QLabel('Кто негр?')
btn_ok =  QPushButton('Ответить')

layout_line1 = QHBoxLayout()
layout_line2 = QHBoxLayout()
layout_line3 = QHBoxLayout()

RadioGroupBox = QGroupBox('Варианты')
rbtn_1 = QRadioButton('Ты такой')
rbtn_2 = QRadioButton('Нит')
rbtn_3 = QRadioButton('Ни зною')
rbtn_4 = QRadioButton('Амобус')

#...
RadioGroup = QButtonGroup()
RadioGroup.addButton(rbtn_1)
RadioGroup.addButton(rbtn_2)
RadioGroup.addButton(rbtn_3)
RadioGroup.addButton(rbtn_4)


layout_ans1 = QHBoxLayout()
layout_ans2 = QVBoxLayout()
layout_ans3 = QVBoxLayout()

layout_ans2.addWidget(rbtn_1)
layout_ans2.addWidget(rbtn_2)
layout_ans3.addWidget(rbtn_3)
layout_ans3.addWidget(rbtn_4)
layout_ans1.addLayout(layout_ans2)
layout_line1.addLayout(layout_ans3)
RadioGroupBox.setLayout(layout_ans1)
layout_line2.addWidget(RadioGroupBox)

#...
RadioGroupBox.setLayout(layout_ans1)

AnsGroupBox = QGroupBox('Результат негрского теста')
right_answer = QLabel('Ти прав? Да или Нит?')
lb_Correct = QLabel('Ответ будет тут')

layout_res = QVBoxLayout()
layout_res.addWidget(lb_Correct, alignment=Qt.AlignHCenter,stretch=2)
AnsGroupBox.setLayout(layout_res)

layout_line1 = QHBoxLayout()
layout_line2 = QHBoxLayout()
layout_line3 = QHBoxLayout()




layout_line1.addWidget(lb_Question, alignment=(Qt.AlignCenter | Qt.AlignVCenter))
layout_line2.addWidget(RadioGroupBox)
layout_line2.addWidget(AnsGroupBox)
layout_line3.addWidget(btn_ok)

layout_line3.addStretch(1)

layout_line2.addWidget(RadioGroupBox)



layout_card.addLayout(layout_line1, stretch=2)
layout_card.addLayout(layout_line2, stretch=8)
layout_card.addStretch(1)
layout_card.addLayout(layout_line3, stretch=1)
layout_card.addStretch(1)
layout_card.addSpacing(5)

window.setLayout(layout_card)

def show_result():
        RadioGroupBox.hide()
        AnsGroupBox.show()
        btn_ok.setText('Следующий вопрос')

def show_question():
        RadioGroupBox.show()
        AnsGroupBox.hide()
        btn_ok.setText('Ответить')
        RadioGroup.setExclusive(False)
        rbtn_1.setChecked(False)
        rbtn_2.setChecked(False)
        rbtn_3.setChecked(False)
        rbtn_4.setChecked(False)
        RadioGroup.setExclusive(True)
class Question():
        def __init__(self,question,right, wrong1,wrong2,wrong3):
                self.question = question
                self.right = right
                self.wrong1 = wrong1
                self.wrong2 = wrong2
                self.wrong3 = wrong3


from random import shuffle
answers = [rbtn_1,rbtn_2,rbtn_3,rbtn_4]
def ask(q):
        shuffle(answers)
        answers[0].setText(q.right)
        answers[1].setText(q.wrong1)
        answers[2].setText(q.wrong2)
        answers[3].setText(q.wrong3)
        lb_Question.setText(q.question)
        right_answer.setText(q.right)
        show_question()

#def show_correct(res):
def show_correct(res):
        # AnsGroupBox.setText(res)
        show_result()
def check_answer():
        if answers[0].isChecked():
                show_correct('Правильно,хорош')
                window.score += 1
        else:
                if answers[1].isChecked() or answers[2].isChecked() or answers[3].isChecked():                        
                        show_correct('Неправильно,лооооох')
 
questions_list.append(Question('Язык в Негрландии','НЕгрский','люти пон','негрский','не знаю',))

def click_ok():
        print('-Статистика')
        print(f'Всего вопросов: {window.total}')
        print(f'Правильных ответов: {window.score}')
        print(f'Рейтинг: {window.score / window.total * 100}%')
        if btn_ok.text() == 'Ответить':
                check_answer()
        else:
                next_question()

btn_ok.clicked.connect(click_ok)
#:)
window.show()
next_question()
app.exec()





